@import url("https://fonts.googleapis.com/css2?family=Roboto+Mono:ital,wght@0,100..700;1,100..700&display=swap");

:root {
  --dark: rgb(19 18 24);
  --bg: rgb(36 35 43);
  --gray: rgb(126 124 140);
  --primary: rgb(164 255 175);
  --white: rgb(230 229 233);
  --yellow: rgb(248 205 99);
  --red: rgb(237 44 73);
}

* {
  margin: 0;
  padding: 0;
  box-sizing: border-box;
  font-family: "Roboto Mono";
}

html {
  font-size: 62.5%;
}

body {
  width: 100%;
  height: 100vh;
  display: grid;
  place-items: center;
  font-size: 1.6rem;
  background-color: var(--dark);
  color: var(--white);
}

.container {
  width: 400px;
  display: flex;
  flex-direction: column;
  gap: 2rem;
}

.container > h1 {
  font-size: 1.8rem;
  text-align: center;
  color: var(--gray);
}

.password {
  display: flex;
  justify-content: space-between;
  align-items: baseline;
  padding: 1.5rem 2rem;
  background: var(--bg);
}
.password__display {
  color: var(--gray);
  width: 200px; /* Set a fixed width for the container */
  overflow: hidden; /* Hide the overflowing content */
  white-space: nowrap; /* Prevent text from wrapping to the next line */
  text-overflow: ellipsis; /* Display an ellipsis (...) for overflowed text */
}
.password span {
  font-size: 20px;
  cursor: pointer;
  color: var(--primary);
}
.password-input {
  background-color: var(--bg);
  padding: 1.5rem 2rem;
  display: flex;
  flex-direction: column;
  gap: 3.2rem;
}

::selection {
  background: var(--primary);
  color: black;
}
.flex {
  display: flex;
  align-items: center;
  justify-content: space-between;
}
.length {
  align-items: baseline;
}

.length h2:nth-child(1) {
  font-size: 1.5rem;
}

.length h2:nth-child(2) {
  color: var(--primary);
}

.range {
  width: 100%;
}

input[type="range"] {
  -webkit-appearance: none; /* Remove default styling */
  appearance: none; /* Remove default styling */
  width: 100%; /* Full width */
  height: 8px; /* Track height */
  background: var(--dark); /* Track background color */
  outline: none; /* Remove outline */
}

input[type="range"]::-webkit-slider-thumb {
  -webkit-appearance: none; /* Remove default thumb styling */
  appearance: none; /* Remove default thumb styling */
  width: 24px; /* Thumb width */
  height: 24px; /* Thumb height */
  background: var(--white); /* Thumb background color */
  cursor: pointer; /* Pointer cursor on hover */
  border-radius: 50%; /* Circular thumb */
  box-shadow: 0 0 4px rgba(0, 0, 0, 0.2); /* Add shadow to thumb */
  opacity: 1;
}

.checkboxes {
  display: flex;
  flex-direction: column;
  gap: 1rem;
}
.checkboxes .checkbox {
  display: flex;
  gap: 1rem;
  align-items: center;
}

input[type="checkbox"] {
  width: 1.7rem;
  height: 1.7rem;
  accent-color: var(--primary);
  background: none;
}

.strength {
  padding: 1.7rem 2.4rem;
  background-color: var(--dark);
  display: flex;
  align-items: baseline;
}
.strength h2 {
  font-size: 1.6rem;
  text-transform: uppercase;
  color: var(--gray);
  letter-spacing: 0.1rem;
}
.strength-display {
  display: flex;
  align-items: baseline;
  gap: 1.5rem;
}
.strength-display h2 {
  color: var(--white);
  text-transform: initial;
}
.boxes {
  display: flex;
  align-items: center;
  gap: 0.5rem;
}
.box {
  width: 1rem;
  height: 2.5rem;
  border: 1px solid var(--white);
}

.generate-button {
  padding: 1.8rem 2rem;
  text-transform: uppercase;
  background-color: var(--primary);
  font-size: 1.8rem;
  font-weight: 500;
  cursor: pointer;
  transition: all 0.3s;
}

.generate-button:hover {
  opacity: 0.9;
}

.red {
  background-color: var(--red);
  border: none;
}
.yellow {
  background-color: var(--yellow);
  border: none;
}
.green {
  background-color: var(--primary);
  border: none;
}

.errmsg {
  color: var(--red);
}
.errmsg::selection {
  color: white;
  background: var(--red);
}
